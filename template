#!/bin/bash

# ScriptTemplate; This script is a template for almost any Linux distribution using the WINE compatibilitylayer.
# Copyright (C) 2018 LinuxSquare

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version

# This program is distributed in the hope it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTYBILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Generel Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program, If not, see <https://www.gnu.org/licenses/>.


export WINEPREFIX=~/Your/Wineprefix/here #(ex. ~/SquareGames/EA32)
. /etc/os-release
OS=$ID
pkgname=ScriptTemplate
pkgver='Version 1'
pkgdesc='Script-template'
license='GPLv3'
url="https://github.com/LinuxSquare/Origin"
LOCATION=$HOME/Your/Parentfolder/here #(ex. $HOME/SquareGames)
prefixname="Your Prefix Name here"
#Arch Linux Dependencies
archdepends="dep1 dep2 dep3 dep4"
#Fedora Dependencies
fedoradepends="dep1 dep2 dep3 dep4"
#openSUSE Dependencies
susedepends="dep1 dep2 dep3 dep4"
#Debian/Ubuntu Dependencies
debdepends="dep1 dep2 dep3 dep4"

WHITE='\033[0m'
RED='\033[0;31m'
GREEN='\033[0;32m'
ORANGE='\e[38;5;202m'

function redecho() {
  echo -e "${RED}${*}${WHITE}"
}

function errorQuit() {
  redecho "$1"
  exit 1
}

function greenecho() {
  echo -e "${GREEN}${*}${WHITE}"
}

function orangeecho() {
  echo -e "${ORANGE}${*}${WHITE}"
}

#List all your commands here

function help() {
  echo -e "OriginSetup: $1: invalid option"
  echo -e "  -i, --install\t\t\t Installs the software"
  echo -e "  -v, --version\t\t\t Shows the current version and the license of the software."
  echo -e "      --uninstall\t\t\t Uninstalls the software"
}

#Create methods for any function (see top)

function version() {
    echo -e "    ${pkgname}, $pkgver
    Copyright (C) 2018 LinuxSquare
    License ${license}: GNU GPL version 3 or later <https://www.gnu.org/licenses/gpl.html>
    This program comes with ABSOLUTELY NO WARRANTY.
    This is free software, and you are welcome to redistribute it."
}

function uninstall() {
  pushd "${WINEPREFIX}/drive_c/Program Files/Origin"
  wineserver -f &
  wineserver_pid=$!
  orangeecho "Starting Uninstaller"
  wine start 'Uninstall.exe'
  while kill -0 ${wineserver_pid} 2>/dev/null; do
      sleep 1
  done
  popd
  rm -rf "${LOCATION}/Your Prefixname here"
}

#checking Internet-connection

function checkConnection() {
  orangeecho "Checking your internet-connection"
  wget --spider --quiet http://example.com
  if [[ $? != 0 ]]; then
    REASON="Either no internet-connection or wget not installed"
    errorQuit "Uh oh, and error occured during installation, please fix the problem first, before you retry.
    \nErrorCode: $REASON"
  else
    greenecho "Connection OK"
  fi
}

#Installing required dependencies (see top variables)

function dependencies() {
  if [[ -d $LOCATION/$prefixname ]]; then
    errorQuit "It seems that you have already used this script.
    \nPlease uninstall the software first before you try again."
  fi
  greenecho "Installing missing dependencies. This may take a while, depending on your internet-connection..."
  if [[ $OS = "arch" ]]; then
    sudo pacman -S "${archdepends}" --quiet --noconfirm --noprogressbar
  elif [[ $OS = "debian" || $OS = "ubuntu" || $OS = "linuxmint" ]]; then
    sudo apt-get -qq install "${debdepends}" -y
  elif [[ $OS = "fedora" ]]; then
    sudo dnf -q install "${fedoradepends}" -y
  elif [[ $OS = "opensuse-tumbleweed" || $OS = "opensuse-leap" ]]; then
    sudo zypper in --no-confirm "${susedepends}"
  fi

}

function buildwine() {
  greenecho "Installing Wine from the repository"
  if [[ $OS = "arch" ]]; then
    sudo pacman -Syu --quiet --noconfirm --noprogressbar
    sudo pacman -S wine-staging --quiet --noconfirm --noprogressbar
  elif [[ $OS = "debian" || $OS = "ubuntu" || $OS = "linuxmint" ]]; then
    DEBVER=$VERSION_ID
    sudo dpkg --add-architecture i386
    wget -nc --quiet https://dl.winehq.org/wine-builds/Release.key
    sudo apt-key add Release.key
    rm -f Release.key
    if [[ $DEBVER = "9" ]]; then
      echo "deb https://dl.winehq.org/wine-builds/debian/ stretch main" | sudo tee /etc/apt/sources.list.d/wine.list
    elif [[ $DEBVER = "8" ]]; then
      echo "deb https://dl.winehq.org/wine-builds/debian/ jessie main" | sudo tee /etc/apt/sources.list.d/wine.list
    elif [[ $OS = "ubuntu" ]]; then
      sudo apt-add-repository https://dl.winehq.org/wine-builds/ubuntu/
    elif [[ $DEBVER = "19" ]]; then
      sudo apt-add-repository "deb https://dl.winehq.org/wine-builds/ubuntu/ bionic main"
    elif [[ $DEBVER = "18.3" || $DEBVER = "18.2" || $DEBVER = "18.1" || $DEBVER = "18" ]]; then
      sudo apt-add-repository "deb https://dl.winehq.org/wine-builds/ubuntu/ xenial main"
    else
      errorQuit "Unsupported distro version. This script currently supports only:
      \nDebian 9 and 8
      \nAny kind of Ubuntu version
      \nLinux Mi nt 18.x and 19.0"
    fi
    sudo apt-get -qq update
    sudo apt-get -qq upgrade -y
    sudo apt-get -qq install --install-recommends winehq-staging -y
  elif [[ $OS = "fedora" ]]; then
    FEDORAVER=$VERSION_ID
    if [[ $FEDORAVER = "29" ]]; then
      sudo dnf -q config-manager --add-repo https://download.opensuse.org/repositories/Emulators:/Wine:/Fedora/Fedora_29_standard/Emulators:Wine:Fedora.repo
    elif [[ $FEDORAVER = "28" ]]; then
      sudo dnf -q config-manager --add-repo https://dl.winehq.org/wine-builds/fedora/28/winehq.repo
    else
      errorQuit "Unsupported Fedora version. Please make sure you're using either version 28 or 29"
    fi
    sudo dnf -q install winehq-staging -y
  elif [[ $OS = "opensuse-tumbleweed" ]]; then
    sudo zypper dup -y
    sudo zypper ar -f http://download.opensuse.org/repositories/Emulators:/Wine/openSUSE_Tumbleweed/Emulators:Wine.repo | echo 'a'
    sudo zypper in -y wine-staging
  elif [[ $OS = "opensuse-leap" ]]; then
    SUSEVER=$VERSION
    if [[ $SUSEVER = "15.0" ]]; then
      sudo zypper ar -f http://download.opensuse.org/repositories/Emulators:/Wine/openSUSE_Leap_15.0/Emulators:Wine.repo | echo 'a'
    elif [[ $SUSEVER = "42.3" ]]; then
      sudo zypper ar -f http://download.opensuse.org/repositories/Emulators:/Wine/openSUSE_Leap_42.3/Emulators:Wine.repo | echo 'a'
    else
      errorQuit "Unsupported openSUSE version. Please make sure you're using either version 42.3, 15.0 or Tumbleweed"
    fi
    sudo zypper in -y wine-staging
  fi
}

function preparePrefix() {
  greenecho "Cloning winetricks from githubusercontent"
  wget --quiet --no-check-certificate https://raw.githubusercontent.com/Winetricks/winetricks/master/src/winetricks
  chmod +x winetricks
  mkdir -p ~/SquareGames
  orangeecho "Downloading dlls to generate Wineprefix. Please select Windows (Version) as your operating system inside winecfg.
  \nBe sure you have removed the ticks for sending data and crash reports to Microsoft, while installing the DLL files.
  \nPress [RETURN] when you've finished reading."
  read
  WINEPREFIX=~/Your/Wineprefix/here wine
  WINEARCH=win32 wineboot -u
  #Install here the required dll files for your software using winetricks 
  #(It can be possible, that you won't need any of these, then just remove the download of winetricks and it's functions)
  WINEPREFIX=~/Your/Wineprefix/here ./winetricks vcrun2010
  WINEPREFIX=~/Your/Wineprefix/here ./winetricks vcrun2013
  WINEPREFIX=~/Your/Wineprefix/here ./winetricks vcrun2017
  WINEPREFIX=~/Your/Wineprefix/here ./winetricks d3dx9
  WINEPREFIX=~/Your/Wineprefix/here wine winecfg
  rm -f winetricks
}

function install() {
  pushd "${WINEPREFIX}/drive_c"
  greenecho "Getting installation-file"
  wget --quiet https://Location_of_exe_file_here.exe
  sleep 2
  wineserver -f &
  wineserver_pid=$!
  greenecho "Starting Installer"
  sleep 3
  wine start 'C:\Setup.exe'
  while kill -0 ${wineserver_pid} 2>/dev/null; do
      sleep 1
  done
  rm -f Setup.exe
  popd
}

#Write here all your shortings (ex. ./YourScriptName --version)
case $1 in
-i|--install)
  checkConnection
  dependencies
  buildwine
  preparePrefix
  install
  ;;
--uninstall)
  uninstall
  ;;
-h|--help)
  help
  ;;
-v|--version)
#Write here the methods that will execute, if you run the command.
  version
  ;;
*)
  orangeecho "Type $0 --help for more information"
  ;;
esac
